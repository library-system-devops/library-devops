name: Deploy Library System

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout DevOps repository
        uses: actions/checkout@v2
        with:
          path: library-devops

      - name: Checkout Frontend repository
        uses: actions/checkout@v2
        with:
          repository: library-system-devops/library-frontend
          path: library-frontend
          token: ${{ secrets.GH_PAT }}

      - name: Checkout Backend repository
        uses: actions/checkout@v2
        with:
          repository: library-system-devops/library-backend
          path: library-backend
          token: ${{ secrets.GH_PAT }}

      - name: Setup Directory Structure
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/library-system/*
            mkdir -p ~/library-system/frontend
            mkdir -p ~/library-system/backend

      - name: Copy Frontend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-frontend/*,library-frontend/.env"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system/"

      - name: Copy Backend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-backend/*,library-backend/.env"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system/"

      - name: Copy Docker and Config files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-devops/docker-compose.yml"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system/"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd ~/library-system
            
            # Setup environment
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}" >> .env
            
            # Using docker compose without sudo
            docker compose down -v || true
            docker compose up -d --build

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd ~/library-system
            echo "Docker Containers:"
            docker ps -a
            echo "\nDocker Networks:"
            docker network ls
            echo "\nDocker Volumes:"
            docker volume ls
            echo "\nDirectory Structure:"
            ls -R
            echo "\nDocker Compose Logs:"
            docker compose logs