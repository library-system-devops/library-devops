name: Deploy Library System

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout DevOps repository
        uses: actions/checkout@v2
        with:
          path: library-devops

      - name: Checkout Frontend repository
        uses: actions/checkout@v2
        with:
          repository: library-system-devops/library-frontend
          path: library-frontend
          token: ${{ secrets.GH_PAT }}

      - name: Checkout Backend repository
        uses: actions/checkout@v2
        with:
          repository: library-system-devops/library-backend
          path: library-backend
          token: ${{ secrets.GH_PAT }}

      - name: Create deployment structure
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/library-system/frontend/src
            mkdir -p ~/library-system/backend/src

      - name: Copy Frontend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-frontend/Dockerfile,library-frontend/nginx.conf,library-frontend/src/,library-frontend/package.json,library-frontend/package-lock.json"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system"
          strip_components: 1

      - name: Copy Backend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-backend/Dockerfile,library-backend/initial_setup.sql,library-backend/src/,library-backend/pom.xml"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system"
          strip_components: 1

      - name: Copy Docker Compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-devops/docker-compose.yml"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system"
          strip_components: 1

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd ~/library-system
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}" >> .env
            
            # Ensure docker is running
            sudo service docker start
            
            # Pull latest images if needed
            docker-compose pull
            
            # Stop existing containers
            docker-compose down
            
            # Build and start containers
            docker-compose up -d --build
            
            # Clean up old images
            docker image prune -f