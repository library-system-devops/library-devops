name: Deploy Library System

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout DevOps repository
        uses: actions/checkout@v2
        with:
          path: library-devops

      - name: Checkout Frontend repository
        uses: actions/checkout@v2
        with:
          repository: library-system-devops/library-frontend
          path: library-frontend
          token: ${{ secrets.GH_PAT }}

      - name: Checkout Backend repository
        uses: actions/checkout@v2
        with:
          repository: library-system-devops/library-backend
          path: library-backend
          token: ${{ secrets.GH_PAT }}

      - name: Setup and verify files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            echo "Cleaning up..."
            rm -rf ~/library-system
            mkdir -p ~/library-system
            ls -la ~/library-system

      - name: Copy Frontend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-frontend/."
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system"
          overwrite: true

      - name: Copy Backend files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-backend/."
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system"
          overwrite: true

      - name: Copy Docker Compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "library-devops/docker-compose.yml"
          target: "/home/${{ secrets.GCP_SSH_USERNAME }}/library-system"
          overwrite: true

      - name: Verify file structure
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            echo "Directory structure:"
            ls -R ~/library-system
            echo "Docker compose file contents:"
            cat ~/library-system/library-devops/docker-compose.yml

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd ~/library-system
            
            # Setup environment
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_EXPIRATION=${{ secrets.JWT_EXPIRATION }}" >> .env
            
            # Debug: Check current directory and list files
            echo "Current directory:"
            pwd
            echo "Contents of deployment directory:"
            ls -la
            echo "Contents of .env file:"
            cat .env
            
            # Ensure docker-compose.yml exists in the correct location
            if [ ! -f ~/library-system/library-devops/docker-compose.yml ]; then
              echo "ERROR: docker-compose.yml not found in ~/library-system/library-devops/"
              exit 1
            fi
            
            # Run Docker Compose with the correct path to the config file
            docker compose --env-file ~/library-system/.env -f ~/library-system/library-devops/docker-compose.yml down -v || true
            docker compose --env-file ~/library-system/.env -f ~/library-system/library-devops/docker-compose.yml up -d --build

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_SSH_USERNAME }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          script: |
            cd ~/library-system
            echo "Docker Containers:"
            docker ps -a
            echo "Docker Networks:"
            docker network ls
            echo "Docker Volumes:"
            docker volume ls
            echo "Docker Compose Logs:"
            docker compose logs